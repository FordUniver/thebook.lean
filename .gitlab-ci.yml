stages:
  - verify
  - update
  - mirror

verify:
  stage: verify
  image: python:3.11-bookworm
  before_script:
    - apt-get update && apt-get install -y curl git jq
    - curl -sS https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh | sh -s -- -y
    - export PATH="$HOME/.elan/bin:$PATH"
  script:
    - lake clean && lake update && lake exe cache get && lake build

update:
  stage: update
  image: python:3.11-bookworm
  before_script:
    - apt-get update && apt-get install -y curl git jq
    - curl -sS https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh | sh -s -- -y
    - export PATH="$HOME/.elan/bin:$PATH"
  script:
    - git checkout master; git pull
    - RELEASE_TAG=$(curl -s "https://api.github.com/repos/leanprover/lean4/releases" | jq -r '.[0].tag_name')
    - echo "Latest Lean version is $RELEASE_TAG"
    - if ! grep -q "leanprover/lean4:${RELEASE_TAG}" lean-toolchain; then
        echo "leanprover/lean4:${RELEASE_TAG}" > lean-toolchain
        lake clean && lake update && lake exe cache get && lake build
      fi

mirror:
  stage: mirror
  image: alpine:latest
  only:
    - master
  script:
    - git config --global user.email "spiegel@zib.com"
    - git config --global user.name "Mirror Bot"
    - 'echo "machine github.com login TheBookBot password ${GITHUB_TOKEN}" > ~/.netrc'
    - LATEST_COMMIT_MSG=$(git log -1 --pretty=%B)
    - temp=$(mktemp -d)
    - git clone --depth=1 "https://github.com/FordUniver/thebook.lean.git" $temp
    - rm -rf $temp/*
    - rsync -av --exclude='.git/' ./ $temp/
    - cd $temp
    - rm .gitlab-ci.yml
    - git add -A
    - |
      if git diff --cached --quiet; then
        echo "No changes in _data, skipping commit."
      else
        git commit -m "mirror ($LATEST_COMMIT_MSG)"
        git push --verbose
      fi
  before_script:
    - apk update && apk add --no-cache git rsync
    - git checkout master
    - git pull
